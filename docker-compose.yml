version: '3.8'

services:
  # Frontend React application
  frontend:
    build:
      context: https://github.com/cscheidegger/ecommerce-front.git
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - api
    environment:
      - VITE_API_URL=http://localhost:8000/api
    restart: unless-stopped
    networks:
      - ecommerce-network

  # FastAPI backend
  api:
    build:
      context: https://github.com/cscheidegger/ecommerce-api.git
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ecommerce
      - SECRET_KEY=${SECRET_KEY:-insecure-secret-key-for-dev-only}
      - FAKESTORE_API_URL=https://fakestoreapi.com
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # PostgreSQL database
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres-data:
